// Finds a value in an "associative array"
// @param $array	: a nested list, primarily with 2 values by row( index1 value1, index2 value2, etc )
// @param $index	: the index, that you search the value for
@function value($array, $index){
  $found	: false;
	$i		: 1;
	$index	: unquote($index);
	
	@while $found != true{
		$element : nth($array, $i);
		@if unquote(nth($element, 1)) == $index{
			$value : nth($element, 2);
			$found : true;
		}
		$i : $i + 1;
	}
	
	@return $value;
}

// ----- example ----- //

// a list of "name-value pairs"
// indexes can be quoted and unquoted, it doesn't matter
// values can be complex too
$faux_array :
  index1    "value1",
  index2    "value2",
  index3    "value3",
  "border"  (12px solid #000),
  "complex" (0 0 1px 0 #000, 0 0 5px 0 #733);

.test{
  border-left : value($faux_array, "border"); // search index can be quoted
  box-shadow : value($faux_array, complex);   // or unquoted
}
