/**
 * "parameter list version" (as seen in example2 below) is currently not working with leafo's scssphp (version 0.0.12),
 * because type "arglist" is implemented as "list".
 * 
 * https://github.com/leafo/scssphp/issues/112
 */

// Get the length of an "associative array"
@function array-length($x){
	@if (type-of($x) != list) and (type-of($x) != arglist){
		@return 0;
	}
	$l : length($x);
	@if type-of($x) == arglist{
		@return $l;
	}
	@if $l < 2{
		@return 0;
	}
	$first : nth($x, 1);
	@if type-of($first) != list{
		@return if($l == 2, 1, 0);
	}
	@return $l;
}

// Finds a value in an "associative array"
// @param $array		: a nested list, primarily with 2 values by row( index1 value1, index2 value2, etc )
// @param $index		: the index, that you search the value for
// @param $if-not-found		: returns this, if index not found
@function array-value($array, $index, $if-not-found : false){
	$l		: array-length($array);
	$index	: quote($index);
	
	@if $l == 1{
		@if quote(nth($array, 1)) == $index{
			@return nth($array, 2);
		}
	}@else if $l > 1{
		@for $i from 1 through $l{
			$element : nth($array, $i);
			@if quote(nth($element, 1)) == $index{
				@return nth($element, 2);
			}
		}
	}
	
	@return $if-not-found;
}

// ----- example ----- //

// a list of "name-value pairs"
// indexes can be quoted and unquoted, it doesn't matter
// values can be complex too
$faux_array :
  index1    "value1",
  index2    "value2",
  index3    "value3",
  "border"  (12px solid #000),
  "complex" (0 0 1px 0 #000, 0 0 5px 0 #733);

.test{
  border-left : array-value($faux_array, "border"); // search index can be quoted
  box-shadow : array-value($faux_array, complex);   // or unquoted
}

// ----- example 2 ----- //

// 1 parameter version
@mixin coloring($params){
	background-color : array-value($params, "bgcolor", yellow);
	color : array-value($params, "color", red);
}

p{
	@include test((
		"color" green,
		"bgcolor" blue
	));
}

// parameter list version
@mixin coloring($params...){
	background-color : array-value($params, "bgcolor", yellow);
	color : array-value($params, "color", red);
}

p{
	@include test(
		"color" green,
		"bgcolor" blue
	);
}

/* both will output:
p{
	background-color : blue;
	color : green;
}
*/
